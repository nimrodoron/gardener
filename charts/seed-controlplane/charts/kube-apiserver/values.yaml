replicas: 1
kubernetesVersion: 1.11.2
# advertiseAddress: 127.0.0.1
# endpointReconcilerType: none
securePort: 443
probeCredentials: base64(user:pass)
shootNetworks:
  services: 10.0.1.0/24
  pods: 192.168.0.0/1
# nodes: 172.16.0.0/20
podAnnotations: {}
featureGates: {}
  # CustomResourceValidation: true
  # RotateKubeletServerCertificate: false
runtimeConfig: {}
  # autoscaling/v2alpha1: true

oidcConfig: {}
  # caBundle: |
  #   -----BEGIN CERTIFICATE-----
  #   ...
  #   -----END CERTIFICATE-----
  # clientID: clientid
  # groupsClaim: groups
  # groupsPrefix: prefix
  # issuerURL: http://localhost
  # signingAlgs:
  # - foo
  # requiredClaims:
  #   foo: bar
  #   bar: foo
  # usernameClaim: user
  # usernamePrefix: prefix

admissionPlugins:
- name: Priority
- name: NamespaceLifecycle
- name: LimitRanger
- name: PodSecurityPolicy
- name: ServiceAccount
- name: NodeRestriction
- name: DefaultStorageClass
- name: PersistentVolumeLabel
- name: DefaultTolerationSeconds
- name: StorageObjectInUseProtection
- name: MutatingAdmissionWebhook
- name: ValidatingAdmissionWebhook
- name: ResourceQuota
# - name: PodNodeSelector
#   config: |
#     podNodeSelectorPluginConfig:
#       clusterDefaultNodeSelector: <node-selectors-labels>
#       namespace1: <node-selectors-labels>
#       namespace2: <node-selectors-labels>

images:
  kube-apiserver: image-repository
  vpn-seed: image-repository:image-tag
  blackbox-exporter: image-repository:image-tag

blackboxExporterPort: 9115
etcdServicePort: 2379

vpnSeedResources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 1000M

blackBoxExporterResources:
    requests:
      cpu: 5m
      memory: 16Mi
    limits:
      cpu: 50m
      memory: 128Mi

apiServerResources:
  requests:
    cpu: 400m
    memory: 400M
  limits:
    cpu: 800m
    memory: 900M

maxReplicas: 1
minReplicas: 1

hpa:
  targetAverageUtilizationCpu: 80
  memoryMetricForHpaEnabled: false
  targetAverageUtilizationMemory: 80

auditConfig:
  auditPolicy: ""

enableEtcdEncryption: false
enableBasicAuthentication: true

## Identifiers of the API. The service account token authenticator will validate that tokens used
## against the API are bound to at least one of these audiences. If the .serviceAccountConfig.issuer
## is configured and this flag is not, this field defaults to a single element list
## containing the issuer URL .
#apiAudiences:
#- "vault"

## Configuration of how to issue service accounts
#serviceAccountConfig:
#  # Identifier of the service account token issuer. The issuer will assert this identifier in "iss"
#  # claim of issued tokens. This value is a string or URI.
#  issuer: "my-issuer"
#  # The current private key of the service account token issuer. The issuer will sign issued ID
#  #  tokens with this private key. (Requires the 'TokenRequest' feature gate.)
#  signingKey: <private key in PEM format>

hvpa:
  enabled: false

scaleUpStabilization:
  stabilizationDuration: "3m"
  minChange:
    cpu:
      value: 300m
      percentage: 80
    memory:
      value: 200M
      percentage: 80

scaleDownStabilization:
  stabilizationDuration: "15m"
  minChange:
    cpu:
      value: 300m
      percentage: 80
    memory:
      value: 200M
      percentage: 80

limitsRequestsGapScaleParams:
  cpu:
    value: "3"
    percentage: 80
  memory:
    value: "5G"
    percentage: 80