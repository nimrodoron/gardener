{{- if .Values.global.apiserver.enabled }}
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gardener.cloud:admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:kube-aggregator
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:apiserver:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.apiserver.serviceAccountName is required" .Values.global.apiserver.serviceAccountName }}"
  namespace: garden
---
apiVersion: {{ include "rbacversion" . }}
kind: RoleBinding
metadata:
  name: gardener.cloud:apiserver:auth-reader
  namespace: kube-system
  labels:
    app: gardener
    role: apiserver
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.apiserver.serviceAccountName is required" .Values.global.apiserver.serviceAccountName }}"
  namespace: garden
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:apiserver:admin
  labels:
    app: gardener
    role: apiserver
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.apiserver.serviceAccountName is required" .Values.global.apiserver.serviceAccountName }}"
  namespace: garden
{{- end }}

{{- if .Values.global.controller.enabled }}
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:controller-manager:admin
  labels:
    app: gardener
    role: apiserver
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.controller.serviceAccountName is required" .Values.global.controller.serviceAccountName }}"
  namespace: garden
{{- end }}

{{- if .Values.global.scheduler.enabled }}
# ClusterRole defines the required permissions for the gardener-scheduler
# Configmap: GET on gardener-scheduler-configmap to read the scheduler configuration & DELETE, GET, PATCH, UPDATE on gardener-scheduler-leader-election
# Events: CREATE, PATCH, UPDATE to send scheduling events
# Seeds: GET, LIST, WATCH
# Shoots: GET, LIST, WATCH, no modification rights needed
# Shoots/binding CREATE on binding subresource of shoots - actual scheduling request that leads to setting shoot.Spec.Cloud.Seed
# Shoots/status PATCH, UPDATE on status subresource of shoots
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:gardener-scheduler
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
    - ""
  resources:
    - events
  verbs:
    - create
    - patch
    - update
- apiGroups:
    - ""
  resources:
    - configmaps
  verbs:
    - create
    - delete
    - get
    - patch
    - update
- apiGroups:
    - core.gardener.cloud
  resources:
    - seeds
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - core.gardener.cloud
  resources:
    - shoots
  verbs:
    - get
    - list
    - watch
    - update
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:system:gardener-scheduler
  labels:
    app: gardener
    role: scheduler
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gardener.cloud:system:gardener-scheduler
subjects:
  - kind: ServiceAccount
    name: "{{ required ".Values.global.scheduler.serviceAccountName is required" .Values.global.scheduler.serviceAccountName }}"
    namespace: garden
{{- end }}

###
# RBAC roles for bootstrapping gardenlets
###
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:seeds
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:system:seeds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gardener.cloud:system:seeds
subjects:
- kind: Group
  name: gardener.cloud:system:seeds
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:seed-bootstrapper
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/seedclient
  verbs:
  - create
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:system:seed-bootstrapper
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gardener.cloud:system:seed-bootstrapper
subjects:
- kind: Group
  name: system:bootstrappers
  apiGroup: rbac.authorization.k8s.io
