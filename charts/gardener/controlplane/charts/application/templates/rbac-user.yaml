# Cluster role granting full permissions to all resources in the gardener API group.
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:admin
  labels:
    garden.sapcloud.io/role: admin
    gardener.cloud/role: admin
rules:
- apiGroups:
  - core.gardener.cloud
  - dashboard.gardener.cloud
  - settings.gardener.cloud
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get

# Aggregated cluster role specifying garden administrators.
# IMPORTANT: You need to define a corresponding ClusterRoleBinding binding specific users
#            to this ClusterRole on your own (users bound to this role have full access to
#            the Garden system).
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:administrators
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      garden.sapcloud.io/role: admin
  - matchLabels:
      gardener.cloud/role: admin
  - matchLabels:
      garden.sapcloud.io/role: project-member
  - matchLabels:
      gardener.cloud/role: project-member
rules: []

# Cluster role with cluster role binding allowing all authenticated users to read the cloudprofiles
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:cloudprofiles
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - core.gardener.cloud
  resources:
  - cloudprofiles
  verbs:
  - get
  - list
  - watch
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:system:cloudprofiles
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gardener.cloud:system:cloudprofiles
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated

# Cluster role for allowing creation of projects.
# IMPORTANT: You need to define a corresponding ClusterRoleBinding binding specific users/
#            groups/serviceaccounts to this ClusterRole on your own.
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-creation
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - core.gardener.cloud
  resources:
  - projects
  verbs:
  - create

# Cluster role setting the permissions for a project member. It gets bound by a RoleBinding
# in a respective project namespace.
# It aggregates all ClusterRoles labeled with rbac.gardener.cloud/aggregate-to-project-member: "true"
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-member
  labels:
    gardener.cloud/role: project-member
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.gardener.cloud/aggregate-to-project-member: "true"
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-member-aggregation
  labels:
    rbac.gardener.cloud/aggregate-to-project-member: "true"
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  - serviceaccounts
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - core.gardener.cloud
  resources:
  - shoots
  - secretbindings
  - quotas
  - plants
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - settings.gardener.cloud
  resources:
  - openidconnectpresets
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch

# Cluster role setting the permissions for a project viewer. It gets bound by a RoleBinding
# in a respective project namespace.
# It aggregates all ClusterRoles labeled with rbac.gardener.cloud/aggregate-to-project-viewer: "true"
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-viewer
  labels:
    garden.sapcloud.io/role: project-viewer
    gardener.cloud/role: project-viewer
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.gardener.cloud/aggregate-to-project-viewer: "true"
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-viewer-aggregation
  labels:
    rbac.gardener.cloud/aggregate-to-project-viewer: "true"
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - events
  - configmaps
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - core.gardener.cloud
  resources:
  - shoots
  - secretbindings
  - quotas
  - plants
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - settings.gardener.cloud
  resources:
  - openidconnectpresets
  verbs:
  - get
  - list
  - watch
